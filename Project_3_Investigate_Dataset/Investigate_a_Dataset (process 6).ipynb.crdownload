{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: Welcome to the Investigate a Dataset project! You will find tips in quoted sections like this to help organize your approach to your investigation. Before submitting your project, it will be a good idea to go back through your report and remove these sections to make the presentation of your work as tidy as possible. First things first, you might want to double-click this Markdown cell and change the title so that it reflects your dataset and investigation.\n",
    "\n",
    "# Project: Investigate a Dataset: Factors of No-Show to Dr. Appointments\n",
    "\n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "    <ul>\n",
    "        <li><a href=\"#general_props\">Research Question 2</a></li>\n",
    "        <li><a href=\"#data_cleaning\">Research Question 2</a></li>\n",
    "    </ul>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "    <ul>\n",
    "        <li><a href=\"#research_q1\">Research Question 1</a></li>\n",
    "        <li><a href=\"#research_q2\">Research Question 2</a></li>\n",
    "    </ul>\n",
    "    <ul>\n",
    "        <li><a href=\"#eda_waitdays\">Wait Days Exploration</a></li>\n",
    "        <li><a href=\"#eda_age\">Wait Days Exploration</a></li>\n",
    "        <li><a href=\"#eda_text\">Wait Days Exploration</a></li>\n",
    "        <li><a href=\"#eda_alcoholism\">Wait Days Exploration</a></li>\n",
    "        <li><a href=\"#eda_location\">Wait Days Exploration</a></li>\n",
    "        \n",
    "   </ul>\n",
    "\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    "\n",
    "> **Tip**: In this section of the report, provide a brief introduction to the dataset you've selected for analysis. At the end of this section, describe the questions that you plan on exploring over the course of the report. Try to build your report around the analysis of at least one dependent variable and three independent variables. If you're not sure what questions to ask, then make sure you familiarize yourself with the dataset, its variables and the dataset context for ideas of what to explore.\n",
    "\n",
    "> If you haven't yet selected and downloaded your data, make sure you do that first before coming back here. In order to work with the data in this workspace, you also need to upload it to the workspace. To do so, click on the jupyter icon in the upper left to be taken back to the workspace directory. There should be an 'Upload' button in the upper right that will let you add your data file(s) to the workspace. You can then click on the .ipynb file name to come back here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/statsmodels/compat/pandas.py:56: FutureWarning: The pandas.core.datetools module is deprecated and will be removed in a future version. Please use the pandas.tseries module instead.\n",
      "  from pandas.core import datetools\n"
     ]
    }
   ],
   "source": [
    "# Use this cell to set up import statements for all of the packages that you\n",
    "#   plan to use.\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pylab\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt \n",
    "%matplotlib inline \n",
    "matplotlib.style.use('ggplot')\n",
    "import seaborn as sb\n",
    "from patsy import dmatrices\n",
    "\n",
    "\n",
    "from sklearn.preprocessing import MinMaxScaler as min_max_scaler, OneHotEncoder as ohe, LabelEncoder as le\n",
    "from sklearn.linear_model import LogisticRegression as logReg\n",
    "from sklearn.ensemble import RandomForestClassifier as rf, GradientBoostingClassifier as gbc\n",
    "from sklearn.svm import SVC as svc\n",
    "from sklearn.utils import resample\n",
    "\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "\n",
    "# Remember to include a 'magic word' so that your visualizations are plotted\n",
    "#   inline with the notebook. See this page for more:\n",
    "#   http://ipython.readthedocs.io/en/stable/interactive/magics.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array(['Universidade de Sao Paulo', 'Universidade Estadual de Campinas',\n",
       "       'Universidade Estadual Paulista Julio de Mesquita Filho',\n",
       "       'Universidade Federal do Rio de Janeiro',\n",
       "       'Universidade Federal do Rio Grande do Sul',\n",
       "       'Universidade Federal de Minas Gerais',\n",
       "       'Universidade Federal de Sao Paulo',\n",
       "       'Hospital de Cancer de Barretos', 'Fundacao Oswaldo Cruz',\n",
       "       'Universidade Federal de Santa Catarina',\n",
       "       'Empresa Brasileira de Pesquisa Agropecuaria',\n",
       "       'Universidade do Extremo Sul Catarinense',\n",
       "       'Universidade Federal do Parana', 'Universidade de Brasilia',\n",
       "       'Instituto Butantan', 'Universidade Federal de Pernambuco',\n",
       "       'Universidade Federal do Ceara',\n",
       "       'Universidade Federal de Sao Carlos',\n",
       "       'Universidade Federal Fluminense', 'Instituto Adolfo Lutz',\n",
       "       'Universidade Federal da Bahia',\n",
       "       'Universidade Federal de Santa Maria',\n",
       "       'Universidade Federal de Vicosa',\n",
       "       'Universidade Catolica de Brasilia',\n",
       "       'Universidade Federal de Goias',\n",
       "       'Universidade Federal do Rio Grande do Norte',\n",
       "       'Centro Universitario Franciscano',\n",
       "       'Pontificia Universidade Catolica do Rio Grande do Sul',\n",
       "       'Universidade do Estado do Rio de Janeiro',\n",
       "       'Hospital do Cancer A.C. Camargo',\n",
       "       'Hospital de Clinicas de Porto Alegre',\n",
       "       'Instituto Nacional del Cancer, Brasil',\n",
       "       'Universidade Federal de Pelotas',\n",
       "       'Universidade Federal de Ouro Preto', 'Ministerio da Saude',\n",
       "       'Universidade Estadual de Londrina',\n",
       "       'Universidade Estadual de Maringa',\n",
       "       'Universidade Luterana do Brasil', 'Universidade Federal do ABC',\n",
       "       'Universidade Federal do Para', 'Universidade Federal da Paraiba',\n",
       "       'Universidade Presbiteriana Mackenzie',\n",
       "       'Universidade Federal do Espirito Santo',\n",
       "       'Instituto Nacional de Matematica Pura e Aplicada',\n",
       "       'Universidade Federal de Uberlandia',\n",
       "       'Hospital Universitario Clementino Fraga Filho',\n",
       "       'Pontificia Universidade Catolica do Rio de Janeiro',\n",
       "       'Universidade Federal de Lavras',\n",
       "       'Instituto Nacional de Pesquisas Espaciais',\n",
       "       'Instituto Nacional de Metrologia, Calidad y Tecnologia',\n",
       "       'Universidade Estadual de Ponta Grossa',\n",
       "       'Comissao Nacional de Energia Nuclear',\n",
       "       'Conselho Nacional de Desenvolvimento Cientifico e Tecnologico',\n",
       "       'Universidade Estadual do Ceara',\n",
       "       'Universidade Federal de Juiz de Fora',\n",
       "       'Universidade Catolica de Pelotas',\n",
       "       'Universidade Federal de Alfenas',\n",
       "       'Universidade Federal de Campina Grande',\n",
       "       'Universidade de Caxias do Sul',\n",
       "       'Sociedade Beneficiente Israelita Brasileira Albert Einstein',\n",
       "       'Universidade Federal de Itajuba',\n",
       "       'Universidade Federal da Fronteira Sul',\n",
       "       'Universidade Federal do Amazonas',\n",
       "       'Fundacao Universidade Federal do Rio Grande',\n",
       "       'Universidade Federal de Sergipe',\n",
       "       'Universidade do Estado de Santa Catarina',\n",
       "       'Universidade Tecnologica Federal do Parana',\n",
       "       'Hospital das Clinicas da Faculdade de Medicina da Universidade de Sao Paulo',\n",
       "       'Centro Federal de Educacao Tecnologica de Minas Gerais',\n",
       "       'Instituto Agronomico Campinas',\n",
       "       'Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior',\n",
       "       'Pontificia Universidade Catolica de Minas Gerais',\n",
       "       'Hospital Sirio-Libanes',\n",
       "       'Universidade Federal Rural de Pernambuco',\n",
       "       'Universidade Federal do Piaui',\n",
       "       'Faculdade de Medicina de Sao Jose do Rio Preto',\n",
       "       'Universidade Estadual do Norte Fluminense Darcy Ribeiro',\n",
       "       'Faculdade de Ciencias Medicas da Santa Casa de Sao Paulo',\n",
       "       'Sao Leopoldo Mandic Faculdade de Odontologia',\n",
       "       'Instituto Tecnologico de Aeronautica',\n",
       "       'Universidade do Sul de Santa Catarina',\n",
       "       'Pontificia Universidade Catolica do Parana',\n",
       "       'Universidade Estadual da Paraiba',\n",
       "       'Universidade Federal de Ciencias da Saude de Porto Alegre',\n",
       "       'Laboratorio Nacional de Computacao Cientifica',\n",
       "       'Universidade Estadual de Santa Cruz', 'Universidade de Pernambuco',\n",
       "       'Centro Universitario da FEI',\n",
       "       'Instituto Nacional de Pesquisas da Amazonia',\n",
       "       'Universidade Federal de Sao Joao del Rei',\n",
       "       'Universidade Federal de Mato Grosso',\n",
       "       'Instituto Militar de Engenharia',\n",
       "       'Universidade Federal de Mato Grosso do Sul',\n",
       "       'Universidade Federal Rural do Rio de Janeiro',\n",
       "       'Universidade Federal do Pampa',\n",
       "       'Universidade Estadual de Montes Claros',\n",
       "       'Universidade Federal de Alagoas', 'Faculdade de Medicina do ABC',\n",
       "       'Universidade de Fortaleza',\n",
       "       'Universidade Federal do Vale do Sao Francisco',\n",
       "       'Universidade Estadual do Centro-Oeste',\n",
       "       'Universidade do Estado da Bahia',\n",
       "       'Universidade do Vale do Rio dos Sinos', 'Fundacao Getulio Vargas',\n",
       "       'Universidade Nove de Julho', 'Universidade Federal do Maranhao',\n",
       "       'Universidade Estacio de Sa',\n",
       "       'Universidade Estadual de Feira de Santana',\n",
       "       'Universidade Federal dos Vales do Jequitinhonha e Mucuri',\n",
       "       'Universidade Federal do Estado do Rio de Janeiro',\n",
       "       'Universidade Federal do Triangulo Mineiro',\n",
       "       'Universidade do Estado do Amazonas',\n",
       "       'Universidade do Vale do Itajai', 'Universidade de Taubate',\n",
       "       'Universidade Federal da Grande Dourados',\n",
       "       'Universidade de Passo Fundo',\n",
       "       'Instituto Federal de Educacao, Ciencia e Tecnologia de Sao Paulo',\n",
       "       'Universidade do Vale do Paraiba',\n",
       "       'Centro Brasileiro de Pesquisas Fisicas',\n",
       "       'Universidade Estadual do Sudoeste da Bahia',\n",
       "       'Universidade Positivo', 'Universidade Estadual do Oeste do Parana',\n",
       "       'Instituto de Botanica de Sao Paulo', 'Universidade Paulista',\n",
       "       'Universidade de Santo Amaro',\n",
       "       'Universidade Federal do Reconcavo da Bahia',\n",
       "       'Universidade Federal do Tocantins',\n",
       "       'Empresa de Pesquisa Agropecuaria e Extensao Rural de Santa Catarina',\n",
       "       'Museu Paraense Emilio Goeldi',\n",
       "       'Fundacao Universidade Regional de Blumenau',\n",
       "       'Instituto de Pesquisas Jardim Botanico do Rio de Janeiro',\n",
       "       'Universidade Federal Rural do Semi-Arido',\n",
       "       'Universidade Vila Velha', 'Observatorio Nacional',\n",
       "       'Pontificia Universidade Catolica de Goias',\n",
       "       'Universidade Estadual de Mato Grosso do Sul',\n",
       "       'Universidade do Estado de Mato Grosso',\n",
       "       'Universidade Federal do Oeste do Para',\n",
       "       'Universidade Estadual de Goias',\n",
       "       'Universidade Federal Rural da Amazonia',\n",
       "       'Pontificia Universidade Catolica de Campinas',\n",
       "       'Pontificia Universidade Catolica de Sao Paulo',\n",
       "       'Centro Federal de Educacao Tecnologica Celso Suckow da Fonseca',\n",
       "       'Universidade Federal do Acre'], dtype=object)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aux_df = pd.read_csv('hospital_rankings.csv', sep = ';')\n",
    "brazil_ranks = aux_df.query('Country==\"BRA\"')\n",
    "brazil_ranks.drop(['Country'], axis=1, inplace=True)\n",
    "brazil_ranks.Institution.values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='general_props'></a>\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "0         0           0        0             0      No  \n",
       "1         0           0        0             0      No  \n",
       "2         0           0        0             0      No  \n",
       "3         0           0        0             0      No  \n",
       "4         1           0        0             0      No  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load your data and print out a few lines. Perform operations to inspect data\n",
    "#   types and look for instances of missing or possibly errant data.\n",
    "df = pd.read_csv('no_shows.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          PatientId  AppointmentID            Age    Scholarship  \\\n",
      "count  1.105270e+05   1.105270e+05  110527.000000  110527.000000   \n",
      "mean   1.474963e+14   5.675305e+06      37.088874       0.098266   \n",
      "std    2.560949e+14   7.129575e+04      23.110205       0.297675   \n",
      "min    3.921784e+04   5.030230e+06      -1.000000       0.000000   \n",
      "25%    4.172614e+12   5.640286e+06      18.000000       0.000000   \n",
      "50%    3.173184e+13   5.680573e+06      37.000000       0.000000   \n",
      "75%    9.439172e+13   5.725524e+06      55.000000       0.000000   \n",
      "max    9.999816e+14   5.790484e+06     115.000000       1.000000   \n",
      "\n",
      "        Hipertension       Diabetes     Alcoholism        Handcap  \\\n",
      "count  110527.000000  110527.000000  110527.000000  110527.000000   \n",
      "mean        0.197246       0.071865       0.030400       0.022248   \n",
      "std         0.397921       0.258265       0.171686       0.161543   \n",
      "min         0.000000       0.000000       0.000000       0.000000   \n",
      "25%         0.000000       0.000000       0.000000       0.000000   \n",
      "50%         0.000000       0.000000       0.000000       0.000000   \n",
      "75%         0.000000       0.000000       0.000000       0.000000   \n",
      "max         1.000000       1.000000       1.000000       4.000000   \n",
      "\n",
      "        SMS_received  \n",
      "count  110527.000000  \n",
      "mean        0.321026  \n",
      "std         0.466873  \n",
      "min         0.000000  \n",
      "25%         0.000000  \n",
      "50%         0.000000  \n",
      "75%         1.000000  \n",
      "max         1.000000  \n",
      "\n",
      "\n",
      "\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 110527 entries, 0 to 110526\n",
      "Data columns (total 14 columns):\n",
      "PatientId         110527 non-null float64\n",
      "AppointmentID     110527 non-null int64\n",
      "Gender            110527 non-null object\n",
      "ScheduledDay      110527 non-null object\n",
      "AppointmentDay    110527 non-null object\n",
      "Age               110527 non-null int64\n",
      "Neighbourhood     110527 non-null object\n",
      "Scholarship       110527 non-null int64\n",
      "Hipertension      110527 non-null int64\n",
      "Diabetes          110527 non-null int64\n",
      "Alcoholism        110527 non-null int64\n",
      "Handcap           110527 non-null int64\n",
      "SMS_received      110527 non-null int64\n",
      "No-show           110527 non-null object\n",
      "dtypes: float64(1), int64(8), object(5)\n",
      "memory usage: 11.8+ MB\n",
      "\n",
      "\n",
      "\n",
      "Total number of duplicates: 0\n"
     ]
    }
   ],
   "source": [
    "#Getting descriptive statistics of the primary data such as min, max, mean, median, etc.\n",
    "print(df.describe())\n",
    "\n",
    "print('\\n\\n')\n",
    "#lets see if there are any null values and the data types \n",
    "df.info()\n",
    "\n",
    "print('\\n\\n')\n",
    "#let's see if any of there are any duplicates. \n",
    "print('Total number of duplicates:', df.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8cd9a57b38>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       " 115    5\n",
       " 100    4\n",
       " 102    2\n",
       " 99     1\n",
       "-1      1\n",
       "Name: Age, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#This makes detecting the outliers visually easy (except for -1)\n",
    "plt.boxplot(df['Age'])\n",
    "plt.title('Age Box Plot')\n",
    "plt.ylabel('Age')\n",
    "plt.show()\n",
    "\n",
    "#this helps to count the ages that need removed (-1 and 115)\n",
    "df['Age'].value_counts().tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Handicap value counts:\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0    108286\n",
       "1      2042\n",
       "2       183\n",
       "3        13\n",
       "4         3\n",
       "Name: Handcap, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print('\\n Handicap value counts:')\n",
    "df['Handcap'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Handicaps, as I gathered from Alfred Wong's project, is the number of hanicaps, NOT four different types. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 1]), array([1, 0]), array([0, 1]), array([0, 1]), array([0, 1]))"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Making sure these are all zeros and ones \n",
    "df.SMS_received.unique(), df.Hipertension.unique(), df.Alcoholism.unique(), \\\n",
    "df.Diabetes.unique(), df.Scholarship.unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see there are fortunately no null values, but this data still needs cleaned. The age value of-1 needs removed. The 5 people aged at 115 also needs removed (unlikely five people are living at that age). The 'Handcap' value range of 0-4 is not the same 0-1 range of the other features, so that will be preprocessed later. I will not remove the 3 people with 4 handicaps because I know much less about the max number of disbabilities a person can have than the max age people can live. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "62299"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# for the number of patients\n",
    "df.PatientId.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='data_cleaning'></a>\n",
    "### Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#getting rid of the -1 in Age\n",
    "df.drop(df[df.Age < 0].index, inplace=True)\n",
    "#removes the supposed 115 year olds\n",
    "df.drop(df[df.Age > 110].index, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "New data shape: (110521, 14)\n",
      "New min age: 0\n",
      "New max age: 102\n"
     ]
    }
   ],
   "source": [
    "#let's check to see if these rows are gone\n",
    "print('New data shape:', df.shape)\n",
    "print('New min age:', df.Age.min())\n",
    "print('New max age:', df.Age.max())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Let's add a column for the number of days between the scheduled day and appointment day. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#difference between the these features after converting them to datetime using pd.to_datetime()\n",
    "df['WaitDays'] = pd.to_datetime(df.AppointmentDay) - pd.to_datetime(df.ScheduledDay)\n",
    "\n",
    "#Here we will find any recording errors where the scheduled date occurred after the appointment day)\n",
    "df['WaitDays'] = df['WaitDays'].apply(lambda x: int(x.days))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "      <th>WaitDays</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5.639473e+13</td>\n",
       "      <td>5638447</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T08:02:16Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>21</td>\n",
       "      <td>ANDORINHAS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>7.223289e+12</td>\n",
       "      <td>5640433</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T10:43:14Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>46</td>\n",
       "      <td>DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>8.734858e+12</td>\n",
       "      <td>5641780</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T14:19:19Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>65</td>\n",
       "      <td>TABUAZEIRO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2.578785e+10</td>\n",
       "      <td>5641781</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T14:19:42Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>45</td>\n",
       "      <td>BENTO FERREIRA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>5.926172e+12</td>\n",
       "      <td>5642400</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T15:48:02Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>51</td>\n",
       "      <td>SÃO PEDRO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1.225776e+12</td>\n",
       "      <td>5642186</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T15:16:29Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>32</td>\n",
       "      <td>SANTA MARTHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>5.288356e+13</td>\n",
       "      <td>5637908</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T07:30:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>61</td>\n",
       "      <td>SÃO CRISTÓVÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>1.999976e+13</td>\n",
       "      <td>5637963</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T07:34:30Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>79</td>\n",
       "      <td>SÃO CRISTÓVÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>7.816264e+13</td>\n",
       "      <td>5637968</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T07:34:42Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>18</td>\n",
       "      <td>SÃO CRISTÓVÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>7.298459e+13</td>\n",
       "      <td>5637975</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T07:35:19Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>63</td>\n",
       "      <td>SÃO CRISTÓVÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>1.578132e+12</td>\n",
       "      <td>5637986</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T07:35:56Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>64</td>\n",
       "      <td>TABUAZEIRO</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>1.455623e+13</td>\n",
       "      <td>5639644</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T09:21:13Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>59</td>\n",
       "      <td>SÃO CRISTÓVÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>7.155896e+13</td>\n",
       "      <td>5641620</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T14:02:16Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>49</td>\n",
       "      <td>SÃO CRISTÓVÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>4.438587e+14</td>\n",
       "      <td>5637909</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T07:30:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>6</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>3.371889e+12</td>\n",
       "      <td>5638164</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T07:46:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>6</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>4.179932e+13</td>\n",
       "      <td>5638018</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T07:37:45Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>2</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>3.996740e+12</td>\n",
       "      <td>5638466</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T08:03:51Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>11</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>4.487944e+10</td>\n",
       "      <td>5638235</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T07:50:15Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>7</td>\n",
       "      <td>SÃO PEDRO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>7.184428e+13</td>\n",
       "      <td>5638545</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T08:08:43Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>0</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>9.784893e+14</td>\n",
       "      <td>5638604</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T08:12:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>1</td>\n",
       "      <td>CONQUISTA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>8.647128e+13</td>\n",
       "      <td>5639264</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T08:53:02Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>0</td>\n",
       "      <td>NOVA PALESTINA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>7.746486e+12</td>\n",
       "      <td>5638014</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T07:37:37Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>61</td>\n",
       "      <td>JARDIM CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>5.753721e+12</td>\n",
       "      <td>5642767</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:06:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>27</td>\n",
       "      <td>JABOUR</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>1.827125e+11</td>\n",
       "      <td>5638939</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T08:36:19Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>71</td>\n",
       "      <td>JABOUR</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>2.274979e+11</td>\n",
       "      <td>5637742</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T07:20:46Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>36</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110475</th>\n",
       "      <td>2.123885e+14</td>\n",
       "      <td>5779726</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-07T07:14:07Z</td>\n",
       "      <td>2016-06-07T00:00:00Z</td>\n",
       "      <td>54</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110483</th>\n",
       "      <td>1.642781e+12</td>\n",
       "      <td>5769404</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-03T08:47:58Z</td>\n",
       "      <td>2016-06-03T00:00:00Z</td>\n",
       "      <td>60</td>\n",
       "      <td>PRAIA DO CANTO</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110486</th>\n",
       "      <td>3.184153e+14</td>\n",
       "      <td>5788099</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T11:14:23Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>60</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110487</th>\n",
       "      <td>1.891645e+12</td>\n",
       "      <td>5786423</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-08T08:24:51Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>20</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110488</th>\n",
       "      <td>7.935892e+14</td>\n",
       "      <td>5760379</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-01T14:47:12Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>76</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110489</th>\n",
       "      <td>7.874370e+14</td>\n",
       "      <td>5788924</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T13:54:16Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>22</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110490</th>\n",
       "      <td>3.252624e+14</td>\n",
       "      <td>5787975</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-08T10:55:45Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>51</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110491</th>\n",
       "      <td>7.565622e+11</td>\n",
       "      <td>5787950</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T10:52:27Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>53</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110492</th>\n",
       "      <td>6.456342e+14</td>\n",
       "      <td>5786741</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-08T08:50:19Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>33</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110493</th>\n",
       "      <td>1.712135e+11</td>\n",
       "      <td>5788054</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-08T11:06:40Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>21</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110495</th>\n",
       "      <td>7.499489e+12</td>\n",
       "      <td>5759838</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-01T13:49:47Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>40</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110497</th>\n",
       "      <td>7.935892e+14</td>\n",
       "      <td>5757745</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-01T09:46:33Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>76</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110498</th>\n",
       "      <td>9.433654e+13</td>\n",
       "      <td>5787655</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T10:21:14Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>59</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110499</th>\n",
       "      <td>8.219692e+14</td>\n",
       "      <td>5757697</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-01T09:42:56Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>66</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110500</th>\n",
       "      <td>4.434384e+14</td>\n",
       "      <td>5787233</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T09:35:13Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>59</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110501</th>\n",
       "      <td>4.544252e+11</td>\n",
       "      <td>5758133</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-01T10:19:12Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>44</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110502</th>\n",
       "      <td>7.316229e+14</td>\n",
       "      <td>5787937</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T10:50:42Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>22</td>\n",
       "      <td>GOIABEIRAS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110503</th>\n",
       "      <td>2.362182e+13</td>\n",
       "      <td>5759473</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-01T13:00:36Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>64</td>\n",
       "      <td>SOLON BORGES</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110504</th>\n",
       "      <td>9.947983e+12</td>\n",
       "      <td>5788052</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T11:06:21Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>4</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110505</th>\n",
       "      <td>5.667344e+13</td>\n",
       "      <td>5758455</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-01T10:45:50Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>55</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110506</th>\n",
       "      <td>8.973883e+11</td>\n",
       "      <td>5758779</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-01T11:09:20Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>5</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110507</th>\n",
       "      <td>4.769462e+14</td>\n",
       "      <td>5786918</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T09:04:18Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>0</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110508</th>\n",
       "      <td>9.433654e+13</td>\n",
       "      <td>5757656</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-01T09:41:00Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>59</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110509</th>\n",
       "      <td>4.952968e+14</td>\n",
       "      <td>5786750</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-08T08:50:51Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>33</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110510</th>\n",
       "      <td>2.362182e+13</td>\n",
       "      <td>5757587</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-01T09:35:48Z</td>\n",
       "      <td>2016-06-01T00:00:00Z</td>\n",
       "      <td>64</td>\n",
       "      <td>SOLON BORGES</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110511</th>\n",
       "      <td>8.235996e+11</td>\n",
       "      <td>5786742</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T08:50:20Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>14</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110512</th>\n",
       "      <td>9.876246e+13</td>\n",
       "      <td>5786368</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T08:20:01Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>41</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110513</th>\n",
       "      <td>8.674778e+13</td>\n",
       "      <td>5785964</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-06-08T07:52:55Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>2</td>\n",
       "      <td>ANTÔNIO HONÓRIO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110514</th>\n",
       "      <td>2.695685e+12</td>\n",
       "      <td>5786567</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-08T08:35:31Z</td>\n",
       "      <td>2016-06-08T00:00:00Z</td>\n",
       "      <td>58</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110517</th>\n",
       "      <td>5.574942e+12</td>\n",
       "      <td>5780122</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-07T07:38:34Z</td>\n",
       "      <td>2016-06-07T00:00:00Z</td>\n",
       "      <td>19</td>\n",
       "      <td>MARIA ORTIZ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>38566 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0       2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1       5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2       4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3       8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4       8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "8       5.639473e+13        5638447      F  2016-04-29T08:02:16Z   \n",
       "19      7.223289e+12        5640433      F  2016-04-29T10:43:14Z   \n",
       "24      8.734858e+12        5641780      F  2016-04-29T14:19:19Z   \n",
       "26      2.578785e+10        5641781      F  2016-04-29T14:19:42Z   \n",
       "28      5.926172e+12        5642400      M  2016-04-29T15:48:02Z   \n",
       "29      1.225776e+12        5642186      F  2016-04-29T15:16:29Z   \n",
       "32      5.288356e+13        5637908      M  2016-04-29T07:30:27Z   \n",
       "34      1.999976e+13        5637963      F  2016-04-29T07:34:30Z   \n",
       "35      7.816264e+13        5637968      M  2016-04-29T07:34:42Z   \n",
       "36      7.298459e+13        5637975      F  2016-04-29T07:35:19Z   \n",
       "37      1.578132e+12        5637986      F  2016-04-29T07:35:56Z   \n",
       "39      1.455623e+13        5639644      F  2016-04-29T09:21:13Z   \n",
       "43      7.155896e+13        5641620      F  2016-04-29T14:02:16Z   \n",
       "53      4.438587e+14        5637909      M  2016-04-29T07:30:31Z   \n",
       "54      3.371889e+12        5638164      F  2016-04-29T07:46:08Z   \n",
       "55      4.179932e+13        5638018      M  2016-04-29T07:37:45Z   \n",
       "57      3.996740e+12        5638466      M  2016-04-29T08:03:51Z   \n",
       "58      4.487944e+10        5638235      M  2016-04-29T07:50:15Z   \n",
       "59      7.184428e+13        5638545      F  2016-04-29T08:08:43Z   \n",
       "66      9.784893e+14        5638604      M  2016-04-29T08:12:27Z   \n",
       "67      8.647128e+13        5639264      F  2016-04-29T08:53:02Z   \n",
       "72      7.746486e+12        5638014      F  2016-04-29T07:37:37Z   \n",
       "77      5.753721e+12        5642767      F  2016-04-29T17:06:27Z   \n",
       "82      1.827125e+11        5638939      M  2016-04-29T08:36:19Z   \n",
       "83      2.274979e+11        5637742      M  2016-04-29T07:20:46Z   \n",
       "...              ...            ...    ...                   ...   \n",
       "110475  2.123885e+14        5779726      F  2016-06-07T07:14:07Z   \n",
       "110483  1.642781e+12        5769404      F  2016-06-03T08:47:58Z   \n",
       "110486  3.184153e+14        5788099      F  2016-06-08T11:14:23Z   \n",
       "110487  1.891645e+12        5786423      M  2016-06-08T08:24:51Z   \n",
       "110488  7.935892e+14        5760379      M  2016-06-01T14:47:12Z   \n",
       "110489  7.874370e+14        5788924      F  2016-06-08T13:54:16Z   \n",
       "110490  3.252624e+14        5787975      M  2016-06-08T10:55:45Z   \n",
       "110491  7.565622e+11        5787950      F  2016-06-08T10:52:27Z   \n",
       "110492  6.456342e+14        5786741      M  2016-06-08T08:50:19Z   \n",
       "110493  1.712135e+11        5788054      M  2016-06-08T11:06:40Z   \n",
       "110495  7.499489e+12        5759838      M  2016-06-01T13:49:47Z   \n",
       "110497  7.935892e+14        5757745      M  2016-06-01T09:46:33Z   \n",
       "110498  9.433654e+13        5787655      F  2016-06-08T10:21:14Z   \n",
       "110499  8.219692e+14        5757697      F  2016-06-01T09:42:56Z   \n",
       "110500  4.434384e+14        5787233      F  2016-06-08T09:35:13Z   \n",
       "110501  4.544252e+11        5758133      M  2016-06-01T10:19:12Z   \n",
       "110502  7.316229e+14        5787937      F  2016-06-08T10:50:42Z   \n",
       "110503  2.362182e+13        5759473      F  2016-06-01T13:00:36Z   \n",
       "110504  9.947983e+12        5788052      F  2016-06-08T11:06:21Z   \n",
       "110505  5.667344e+13        5758455      F  2016-06-01T10:45:50Z   \n",
       "110506  8.973883e+11        5758779      M  2016-06-01T11:09:20Z   \n",
       "110507  4.769462e+14        5786918      F  2016-06-08T09:04:18Z   \n",
       "110508  9.433654e+13        5757656      F  2016-06-01T09:41:00Z   \n",
       "110509  4.952968e+14        5786750      M  2016-06-08T08:50:51Z   \n",
       "110510  2.362182e+13        5757587      F  2016-06-01T09:35:48Z   \n",
       "110511  8.235996e+11        5786742      F  2016-06-08T08:50:20Z   \n",
       "110512  9.876246e+13        5786368      F  2016-06-08T08:20:01Z   \n",
       "110513  8.674778e+13        5785964      M  2016-06-08T07:52:55Z   \n",
       "110514  2.695685e+12        5786567      F  2016-06-08T08:35:31Z   \n",
       "110517  5.574942e+12        5780122      F  2016-06-07T07:38:34Z   \n",
       "\n",
       "              AppointmentDay  Age      Neighbourhood  Scholarship  \\\n",
       "0       2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0   \n",
       "1       2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0   \n",
       "2       2016-04-29T00:00:00Z   62      MATA DA PRAIA            0   \n",
       "3       2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0   \n",
       "4       2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0   \n",
       "8       2016-04-29T00:00:00Z   21         ANDORINHAS            0   \n",
       "19      2016-04-29T00:00:00Z   46           DA PENHA            0   \n",
       "24      2016-04-29T00:00:00Z   65         TABUAZEIRO            0   \n",
       "26      2016-04-29T00:00:00Z   45     BENTO FERREIRA            0   \n",
       "28      2016-04-29T00:00:00Z   51          SÃO PEDRO            0   \n",
       "29      2016-04-29T00:00:00Z   32       SANTA MARTHA            0   \n",
       "32      2016-04-29T00:00:00Z   61      SÃO CRISTÓVÃO            0   \n",
       "34      2016-04-29T00:00:00Z   79      SÃO CRISTÓVÃO            0   \n",
       "35      2016-04-29T00:00:00Z   18      SÃO CRISTÓVÃO            0   \n",
       "36      2016-04-29T00:00:00Z   63      SÃO CRISTÓVÃO            0   \n",
       "37      2016-04-29T00:00:00Z   64         TABUAZEIRO            1   \n",
       "39      2016-04-29T00:00:00Z   59      SÃO CRISTÓVÃO            0   \n",
       "43      2016-04-29T00:00:00Z   49      SÃO CRISTÓVÃO            0   \n",
       "53      2016-04-29T00:00:00Z    6          CONQUISTA            0   \n",
       "54      2016-04-29T00:00:00Z    6     NOVA PALESTINA            0   \n",
       "55      2016-04-29T00:00:00Z    2     NOVA PALESTINA            0   \n",
       "57      2016-04-29T00:00:00Z   11          CONQUISTA            0   \n",
       "58      2016-04-29T00:00:00Z    7          SÃO PEDRO            0   \n",
       "59      2016-04-29T00:00:00Z    0          CONQUISTA            0   \n",
       "66      2016-04-29T00:00:00Z    1          CONQUISTA            0   \n",
       "67      2016-04-29T00:00:00Z    0     NOVA PALESTINA            0   \n",
       "72      2016-04-29T00:00:00Z   61     JARDIM CAMBURI            0   \n",
       "77      2016-04-29T00:00:00Z   27             JABOUR            0   \n",
       "82      2016-04-29T00:00:00Z   71             JABOUR            0   \n",
       "83      2016-04-29T00:00:00Z   36        RESISTÊNCIA            0   \n",
       "...                      ...  ...                ...          ...   \n",
       "110475  2016-06-07T00:00:00Z   54        RESISTÊNCIA            0   \n",
       "110483  2016-06-03T00:00:00Z   60     PRAIA DO CANTO            0   \n",
       "110486  2016-06-08T00:00:00Z   60        MARIA ORTIZ            0   \n",
       "110487  2016-06-08T00:00:00Z   20        MARIA ORTIZ            0   \n",
       "110488  2016-06-01T00:00:00Z   76        MARIA ORTIZ            0   \n",
       "110489  2016-06-08T00:00:00Z   22        MARIA ORTIZ            0   \n",
       "110490  2016-06-08T00:00:00Z   51        MARIA ORTIZ            0   \n",
       "110491  2016-06-08T00:00:00Z   53        MARIA ORTIZ            0   \n",
       "110492  2016-06-08T00:00:00Z   33        MARIA ORTIZ            0   \n",
       "110493  2016-06-08T00:00:00Z   21        MARIA ORTIZ            0   \n",
       "110495  2016-06-01T00:00:00Z   40        MARIA ORTIZ            0   \n",
       "110497  2016-06-01T00:00:00Z   76        MARIA ORTIZ            0   \n",
       "110498  2016-06-08T00:00:00Z   59        MARIA ORTIZ            0   \n",
       "110499  2016-06-01T00:00:00Z   66        MARIA ORTIZ            0   \n",
       "110500  2016-06-08T00:00:00Z   59        MARIA ORTIZ            0   \n",
       "110501  2016-06-01T00:00:00Z   44        MARIA ORTIZ            0   \n",
       "110502  2016-06-08T00:00:00Z   22         GOIABEIRAS            0   \n",
       "110503  2016-06-01T00:00:00Z   64       SOLON BORGES            0   \n",
       "110504  2016-06-08T00:00:00Z    4        MARIA ORTIZ            0   \n",
       "110505  2016-06-01T00:00:00Z   55        MARIA ORTIZ            0   \n",
       "110506  2016-06-01T00:00:00Z    5        MARIA ORTIZ            0   \n",
       "110507  2016-06-08T00:00:00Z    0        MARIA ORTIZ            0   \n",
       "110508  2016-06-01T00:00:00Z   59        MARIA ORTIZ            0   \n",
       "110509  2016-06-08T00:00:00Z   33        MARIA ORTIZ            0   \n",
       "110510  2016-06-01T00:00:00Z   64       SOLON BORGES            0   \n",
       "110511  2016-06-08T00:00:00Z   14        MARIA ORTIZ            0   \n",
       "110512  2016-06-08T00:00:00Z   41        MARIA ORTIZ            0   \n",
       "110513  2016-06-08T00:00:00Z    2    ANTÔNIO HONÓRIO            0   \n",
       "110514  2016-06-08T00:00:00Z   58        MARIA ORTIZ            0   \n",
       "110517  2016-06-07T00:00:00Z   19        MARIA ORTIZ            0   \n",
       "\n",
       "        Hipertension  Diabetes  Alcoholism  Handcap  SMS_received No-show  \\\n",
       "0                  1         0           0        0             0      No   \n",
       "1                  0         0           0        0             0      No   \n",
       "2                  0         0           0        0             0      No   \n",
       "3                  0         0           0        0             0      No   \n",
       "4                  1         1           0        0             0      No   \n",
       "8                  0         0           0        0             0      No   \n",
       "19                 0         0           0        0             0      No   \n",
       "24                 0         0           0        0             0      No   \n",
       "26                 1         0           0        0             0      No   \n",
       "28                 0         0           0        0             0      No   \n",
       "29                 0         0           0        0             0      No   \n",
       "32                 1         0           0        0             0      No   \n",
       "34                 1         0           0        0             0      No   \n",
       "35                 0         0           0        0             0      No   \n",
       "36                 1         1           0        0             0      No   \n",
       "37                 1         1           0        0             0      No   \n",
       "39                 0         0           0        0             0      No   \n",
       "43                 1         0           0        0             0      No   \n",
       "53                 0         0           0        0             0      No   \n",
       "54                 0         0           0        0             0      No   \n",
       "55                 0         0           0        0             0      No   \n",
       "57                 0         0           0        0             0      No   \n",
       "58                 0         0           0        0             0      No   \n",
       "59                 0         0           0        0             0      No   \n",
       "66                 0         0           0        0             0      No   \n",
       "67                 0         0           0        0             0      No   \n",
       "72                 0         0           0        0             0      No   \n",
       "77                 0         0           0        0             0      No   \n",
       "82                 0         0           0        0             0      No   \n",
       "83                 0         0           0        0             0      No   \n",
       "...              ...       ...         ...      ...           ...     ...   \n",
       "110475             1         0           0        0             0      No   \n",
       "110483             1         0           0        0             0      No   \n",
       "110486             0         0           0        0             0      No   \n",
       "110487             0         0           0        0             0      No   \n",
       "110488             0         0           0        0             0      No   \n",
       "110489             0         0           0        0             0      No   \n",
       "110490             0         0           0        0             0      No   \n",
       "110491             0         0           0        0             0      No   \n",
       "110492             1         0           0        0             0     Yes   \n",
       "110493             0         0           0        0             0      No   \n",
       "110495             0         0           0        0             0      No   \n",
       "110497             0         0           0        0             0      No   \n",
       "110498             0         0           0        0             0      No   \n",
       "110499             1         1           0        0             0      No   \n",
       "110500             0         0           0        0             0      No   \n",
       "110501             0         0           0        0             0      No   \n",
       "110502             0         0           0        0             0      No   \n",
       "110503             0         0           0        0             0      No   \n",
       "110504             0         0           0        0             0      No   \n",
       "110505             0         0           0        0             0      No   \n",
       "110506             0         0           0        0             0      No   \n",
       "110507             0         0           0        0             0      No   \n",
       "110508             0         0           0        0             0      No   \n",
       "110509             0         0           0        0             0      No   \n",
       "110510             0         0           0        0             0      No   \n",
       "110511             0         0           0        0             0      No   \n",
       "110512             0         0           0        0             0      No   \n",
       "110513             0         0           0        0             0      No   \n",
       "110514             0         0           0        0             0      No   \n",
       "110517             0         0           0        0             0      No   \n",
       "\n",
       "        WaitDays  \n",
       "0             -1  \n",
       "1             -1  \n",
       "2             -1  \n",
       "3             -1  \n",
       "4             -1  \n",
       "8             -1  \n",
       "19            -1  \n",
       "24            -1  \n",
       "26            -1  \n",
       "28            -1  \n",
       "29            -1  \n",
       "32            -1  \n",
       "34            -1  \n",
       "35            -1  \n",
       "36            -1  \n",
       "37            -1  \n",
       "39            -1  \n",
       "43            -1  \n",
       "53            -1  \n",
       "54            -1  \n",
       "55            -1  \n",
       "57            -1  \n",
       "58            -1  \n",
       "59            -1  \n",
       "66            -1  \n",
       "67            -1  \n",
       "72            -1  \n",
       "77            -1  \n",
       "82            -1  \n",
       "83            -1  \n",
       "...          ...  \n",
       "110475        -1  \n",
       "110483        -1  \n",
       "110486        -1  \n",
       "110487        -1  \n",
       "110488        -1  \n",
       "110489        -1  \n",
       "110490        -1  \n",
       "110491        -1  \n",
       "110492        -1  \n",
       "110493        -1  \n",
       "110495        -1  \n",
       "110497        -1  \n",
       "110498        -1  \n",
       "110499        -1  \n",
       "110500        -1  \n",
       "110501        -1  \n",
       "110502        -1  \n",
       "110503        -1  \n",
       "110504        -1  \n",
       "110505        -1  \n",
       "110506        -1  \n",
       "110507        -1  \n",
       "110508        -1  \n",
       "110509        -1  \n",
       "110510        -1  \n",
       "110511        -1  \n",
       "110512        -1  \n",
       "110513        -1  \n",
       "110514        -1  \n",
       "110517        -1  \n",
       "\n",
       "[38566 rows x 15 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking to see how many of the appointment times are set after the time of scheduling. \n",
    "df.query('WaitDays < 0 ')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It shows that over 30,000 appointments are after the time of their scheduling, but that is not entirely true. It is actually the case that the appointments were done on the same day for most of these. It shows -1 for wait days because the exact time of day was not recorded for the atual appointment, and only for the scheduling time. So we can assume the scheduled day and appointment day are the same. However, are there any appointment times less than -1 (which would indicate error)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "      <th>WaitDays</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27033</th>\n",
       "      <td>7.839273e+12</td>\n",
       "      <td>5679978</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-10T10:51:53Z</td>\n",
       "      <td>2016-05-09T00:00:00Z</td>\n",
       "      <td>38</td>\n",
       "      <td>RESISTÊNCIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55226</th>\n",
       "      <td>7.896294e+12</td>\n",
       "      <td>5715660</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-18T14:50:41Z</td>\n",
       "      <td>2016-05-17T00:00:00Z</td>\n",
       "      <td>19</td>\n",
       "      <td>SANTO ANTÔNIO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64175</th>\n",
       "      <td>2.425226e+13</td>\n",
       "      <td>5664962</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-05T13:43:58Z</td>\n",
       "      <td>2016-05-04T00:00:00Z</td>\n",
       "      <td>22</td>\n",
       "      <td>CONSOLAÇÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71533</th>\n",
       "      <td>9.982316e+14</td>\n",
       "      <td>5686628</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-05-11T13:49:20Z</td>\n",
       "      <td>2016-05-05T00:00:00Z</td>\n",
       "      <td>81</td>\n",
       "      <td>SANTO ANTÔNIO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>-7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72362</th>\n",
       "      <td>3.787482e+12</td>\n",
       "      <td>5655637</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-05-04T06:50:57Z</td>\n",
       "      <td>2016-05-03T00:00:00Z</td>\n",
       "      <td>7</td>\n",
       "      <td>TABUAZEIRO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>-2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "27033  7.839273e+12        5679978      M  2016-05-10T10:51:53Z   \n",
       "55226  7.896294e+12        5715660      F  2016-05-18T14:50:41Z   \n",
       "64175  2.425226e+13        5664962      F  2016-05-05T13:43:58Z   \n",
       "71533  9.982316e+14        5686628      F  2016-05-11T13:49:20Z   \n",
       "72362  3.787482e+12        5655637      M  2016-05-04T06:50:57Z   \n",
       "\n",
       "             AppointmentDay  Age  Neighbourhood  Scholarship  Hipertension  \\\n",
       "27033  2016-05-09T00:00:00Z   38    RESISTÊNCIA            0             0   \n",
       "55226  2016-05-17T00:00:00Z   19  SANTO ANTÔNIO            0             0   \n",
       "64175  2016-05-04T00:00:00Z   22     CONSOLAÇÃO            0             0   \n",
       "71533  2016-05-05T00:00:00Z   81  SANTO ANTÔNIO            0             0   \n",
       "72362  2016-05-03T00:00:00Z    7     TABUAZEIRO            0             0   \n",
       "\n",
       "       Diabetes  Alcoholism  Handcap  SMS_received No-show  WaitDays  \n",
       "27033         0           0        1             0     Yes        -2  \n",
       "55226         0           0        1             0     Yes        -2  \n",
       "64175         0           0        0             0     Yes        -2  \n",
       "71533         0           0        0             0     Yes        -7  \n",
       "72362         0           0        0             0     Yes        -2  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.query('WaitDays < -1')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we have only five. So I will just delete these, as these five entries distort the contribution of the WaitDays variable to the no-show outcome. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    110516.000000\n",
       "mean          9.533190\n",
       "std          15.028018\n",
       "min           0.000000\n",
       "25%           0.000000\n",
       "50%           3.000000\n",
       "75%          14.000000\n",
       "max         178.000000\n",
       "Name: WaitDays, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(df.loc[df.WaitDays < -1].index, inplace = True)\n",
    "\n",
    "#We will also convert the leftover -1 values to 0 because they scheduling day and appointment day were the same\n",
    "df.WaitDays = df.WaitDays.apply(lambda x: 0 if x == -1 else x)\n",
    "df.WaitDays.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8cda623518>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(df.WaitDays)\n",
    "plt.xlabel('Number of waiting days')\n",
    "plt.ylabel('Number of No-Shows')\n",
    "plt.title('Number of No-shows based on Wait Days');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This has an expected strong positive-skew given hospital administrators and patients would generally want to minimize the time between scheduled and appointment dates. \n",
    "\n",
    "Now I'll drop the date columns and the id numbers. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "dates = df.loc[:, ['ScheduledDay', 'AppointmentDay']] #saves a copy of dates in variable\n",
    "df.drop(['PatientId', 'AppointmentID', 'ScheduledDay', 'AppointmentDay'], axis=1, inplace=True)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "      <th>WaitDays</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender  Age      Neighbourhood  Scholarship  Hipertension  Diabetes  \\\n",
       "0      F   62    JARDIM DA PENHA            0             1         0   \n",
       "1      M   56    JARDIM DA PENHA            0             0         0   \n",
       "2      F   62      MATA DA PRAIA            0             0         0   \n",
       "3      F    8  PONTAL DE CAMBURI            0             0         0   \n",
       "4      F   56    JARDIM DA PENHA            0             1         1   \n",
       "\n",
       "   Alcoholism  Handcap  SMS_received No-show  WaitDays  \n",
       "0           0        0             0      No         0  \n",
       "1           0        0             0      No         0  \n",
       "2           0        0             0      No         0  \n",
       "3           0        0             0      No         0  \n",
       "4           0        0             0      No         0  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No_show</th>\n",
       "      <th>WaitDays</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender  Age       Neighborhood  Scholarship  Hypertension  Diabetes  \\\n",
       "0      F   62    JARDIM DA PENHA            0             1         0   \n",
       "1      M   56    JARDIM DA PENHA            0             0         0   \n",
       "2      F   62      MATA DA PRAIA            0             0         0   \n",
       "3      F    8  PONTAL DE CAMBURI            0             0         0   \n",
       "4      F   56    JARDIM DA PENHA            0             1         1   \n",
       "\n",
       "   Alcoholism  Handicap  SMS_received No_show  WaitDays  \n",
       "0           0         0             0      No         0  \n",
       "1           0         0             0      No         0  \n",
       "2           0         0             0      No         0  \n",
       "3           0         0             0      No         0  \n",
       "4           0         0             0      No         0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#fixes the simple misspellings \n",
    "df = df.rename(columns={'No-show':'No_show', 'Handcap':'Handicap', 'Hipertension':'Hypertension', 'Neighbourhood': 'Neighborhood'})\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, we will 1,0 encode these two columns: 'No-show' and 'Gender'. I used .apply() to ensure that every 'Yes' in the 'No-show' us a 1, and every 'No' is zero. So for every 1 there is a no-show, and for every 0 the patient showed up."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = df.copy #this keeps the cleaned, though unprocessed original data in storage so we may access it for plotting"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "from sklearn import preprocessing\n",
    "cat_features = ['color', 'director_name', 'actor_2_name']\n",
    "enc = le()\n",
    "enc.fit(cat_features)\n",
    "new_cat_features = enc.transform(cat_features)\n",
    "print new_cat_features # [1 2 0]\n",
    "new_cat_features = new_cat_features.reshape(-1, 1) # Needs to be the correct shape\n",
    "ohe = preprocessing.OneHotEncoder(sparse=False) #Easier to read\n",
    "print ohe.fit_transform(new_cat_features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No_show</th>\n",
       "      <th>...</th>\n",
       "      <th>SANTOS_REIS</th>\n",
       "      <th>SEGURANÇA_DO_LAR</th>\n",
       "      <th>SOLON_BORGES</th>\n",
       "      <th>SÃO_BENEDITO</th>\n",
       "      <th>SÃO_CRISTÓVÃO</th>\n",
       "      <th>SÃO_JOSÉ</th>\n",
       "      <th>SÃO_PEDRO</th>\n",
       "      <th>TABUAZEIRO</th>\n",
       "      <th>UNIVERSITÁRIO</th>\n",
       "      <th>VILA_RUBIM</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>F</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>F</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>F</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 92 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Gender  Age       Neighborhood  Scholarship  Hypertension  Diabetes  \\\n",
       "0      F   62    JARDIM DA PENHA            0             1         0   \n",
       "1      M   56    JARDIM DA PENHA            0             0         0   \n",
       "2      F   62      MATA DA PRAIA            0             0         0   \n",
       "3      F    8  PONTAL DE CAMBURI            0             0         0   \n",
       "4      F   56    JARDIM DA PENHA            0             1         1   \n",
       "\n",
       "   Alcoholism  Handicap  SMS_received No_show     ...      SANTOS_REIS  \\\n",
       "0           0         0             0      No     ...                0   \n",
       "1           0         0             0      No     ...                0   \n",
       "2           0         0             0      No     ...                0   \n",
       "3           0         0             0      No     ...                0   \n",
       "4           0         0             0      No     ...                0   \n",
       "\n",
       "   SEGURANÇA_DO_LAR  SOLON_BORGES  SÃO_BENEDITO  SÃO_CRISTÓVÃO  SÃO_JOSÉ  \\\n",
       "0                 0             0             0              0         0   \n",
       "1                 0             0             0              0         0   \n",
       "2                 0             0             0              0         0   \n",
       "3                 0             0             0              0         0   \n",
       "4                 0             0             0              0         0   \n",
       "\n",
       "   SÃO_PEDRO  TABUAZEIRO  UNIVERSITÁRIO  VILA_RUBIM  \n",
       "0          0           0              0           0  \n",
       "1          0           0              0           0  \n",
       "2          0           0              0           0  \n",
       "3          0           0              0           0  \n",
       "4          0           0              0           0  \n",
       "\n",
       "[5 rows x 92 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#this creates 81 new columns with each column containing an 81 rows with one row as 1 and the rest 0s\n",
    "df = pd.concat([df, pd.get_dummies(df.Neighborhood)], axis=1)\n",
    "df.columns = df.columns.str.replace(' ', '_')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here I one-hot encode the No-show and Gender variable to 1s and 0s. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    88205\n",
      "1    22311\n",
      "Name: Noshow_onehot, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "df['Noshow_onehot'] = df['No_show'].apply(lambda x: 1 if x == 'Yes' else 0) #one-hot encodes 'Yes' to 1s and 'No' to 0s.\n",
    "df['Gender_onehot'] = df['Gender'].apply(lambda x: 1 if x =='F' else 0) #encodes females to 1s and males to 0s \n",
    "print(df.Noshow_onehot.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Age_mmn'] = df.Age/df.Age.max()\n",
    "df['WaitDays_mmn'] = df.WaitDays/df.WaitDays.max()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The violin plot indicates that as the days between the scheduled date and the appointment date increases, the number of no-shows increases, but the effect of the wait time increase diminishes somewhere between 35 and 50 days, so the relationship appears to be nonlinear. The people who showed on the left reinforce this with most people showing up closest to zero days of waiting. \n",
    "\n",
    "The bar chart on the right makes it much more clear that around 16 days most people do not show up. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8cda5695c0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(df['No_show'], bins=np.arange(0,1.4,.4))\n",
    "plt.title('Shows and No-Shows')\n",
    "plt.ylabel('Frequency of Patients')\n",
    "plt.xlabel('No Show');\n",
    "\n",
    "#Here we get a clear picture of how many no-shows at 1, and shows at 0."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='research_q1'></a>\n",
    "## Research Question 1: What are the relative contributions of each feature to the no-show outcome? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Gender', 'Age', 'Neighborhood', 'Scholarship', 'Hypertension',\n",
       "       'Diabetes', 'Alcoholism', 'Handicap', 'SMS_received', 'No_show',\n",
       "       'WaitDays', 'AEROPORTO', 'ANDORINHAS', 'ANTÔNIO_HONÓRIO',\n",
       "       'ARIOVALDO_FAVALESSA', 'BARRO_VERMELHO', 'BELA_VISTA', 'BENTO_FERREIRA',\n",
       "       'BOA_VISTA', 'BONFIM', 'CARATOÍRA', 'CENTRO', 'COMDUSA', 'CONQUISTA',\n",
       "       'CONSOLAÇÃO', 'CRUZAMENTO', 'DA_PENHA', 'DE_LOURDES', 'DO_CABRAL',\n",
       "       'DO_MOSCOSO', 'DO_QUADRO', 'ENSEADA_DO_SUÁ', 'ESTRELINHA',\n",
       "       'FONTE_GRANDE', 'FORTE_SÃO_JOÃO', 'FRADINHOS', 'GOIABEIRAS',\n",
       "       'GRANDE_VITÓRIA', 'GURIGICA', 'HORTO', 'ILHA_DAS_CAIEIRAS',\n",
       "       'ILHA_DE_SANTA_MARIA', 'ILHA_DO_BOI', 'ILHA_DO_FRADE',\n",
       "       'ILHA_DO_PRÍNCIPE', 'ILHAS_OCEÂNICAS_DE_TRINDADE', 'INHANGUETÁ',\n",
       "       'ITARARÉ', 'JABOUR', 'JARDIM_CAMBURI', 'JARDIM_DA_PENHA',\n",
       "       'JESUS_DE_NAZARETH', 'JOANA_D´ARC', 'JUCUTUQUARA', 'MARIA_ORTIZ',\n",
       "       'MARUÍPE', 'MATA_DA_PRAIA', 'MONTE_BELO', 'MORADA_DE_CAMBURI',\n",
       "       'MÁRIO_CYPRESTE', 'NAZARETH', 'NOVA_PALESTINA', 'PARQUE_INDUSTRIAL',\n",
       "       'PARQUE_MOSCOSO', 'PIEDADE', 'PONTAL_DE_CAMBURI', 'PRAIA_DO_CANTO',\n",
       "       'PRAIA_DO_SUÁ', 'REDENÇÃO', 'REPÚBLICA', 'RESISTÊNCIA', 'ROMÃO',\n",
       "       'SANTA_CECÍLIA', 'SANTA_CLARA', 'SANTA_HELENA', 'SANTA_LUÍZA',\n",
       "       'SANTA_LÚCIA', 'SANTA_MARTHA', 'SANTA_TEREZA', 'SANTO_ANDRÉ',\n",
       "       'SANTO_ANTÔNIO', 'SANTOS_DUMONT', 'SANTOS_REIS', 'SEGURANÇA_DO_LAR',\n",
       "       'SOLON_BORGES', 'SÃO_BENEDITO', 'SÃO_CRISTÓVÃO', 'SÃO_JOSÉ',\n",
       "       'SÃO_PEDRO', 'TABUAZEIRO', 'UNIVERSITÁRIO', 'VILA_RUBIM',\n",
       "       'Noshow_onehot', 'Gender_onehot', 'Age_mmn', 'WaitDays_mmn'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Iter       Train Loss   Remaining Time \n",
      "         1           0.9888           37.22s\n",
      "         2           0.9748           39.26s\n",
      "         3           0.9633           39.85s\n",
      "         4           0.9538           39.88s\n",
      "         5           0.9459           39.78s\n",
      "         6           0.9392           39.49s\n",
      "         7           0.9336           39.35s\n",
      "         8           0.9289           39.27s\n",
      "         9           0.9249           39.06s\n",
      "        10           0.9216           38.67s\n",
      "        20           0.9062           35.00s\n",
      "        30           0.9017           29.98s\n",
      "        40           0.8996           24.45s\n",
      "        50           0.8984           19.21s\n",
      "        60           0.8972           14.85s\n",
      "        70           0.8964           10.82s\n",
      "        80           0.8956            6.97s\n",
      "        90           0.8949            3.44s\n",
      "       100           0.8944            0.00s\n",
      "\n",
      "WaitDays_mmn       0.398493\n",
      "Age_mmn            0.198678\n",
      "SMS_received       0.034137\n",
      "Alcoholism         0.025984\n",
      "ITARARÉ            0.023426\n",
      "JARDIM_DA_PENHA    0.023086\n",
      "dtype: float64\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "